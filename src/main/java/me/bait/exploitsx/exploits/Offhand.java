package me.bait.exploitsx.exploits;

import me.bait.exploitsx.ExploitsX;
import me.bait.exploitsx.util.API;
import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.Material;
import org.bukkit.block.ShulkerBox;
import org.bukkit.configuration.file.FileConfiguration;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.block.BlockDispenseEvent;
import org.bukkit.event.inventory.InventoryClickEvent;
import org.bukkit.event.player.PlayerAttemptPickupItemEvent;
import org.bukkit.event.player.PlayerDropItemEvent;
import org.bukkit.event.player.PlayerSwapHandItemsEvent;
import org.bukkit.inventory.ItemStack;
import org.bukkit.inventory.meta.BlockStateMeta;
import org.bukkit.inventory.meta.ItemMeta;

import java.util.HashMap;

public class Offhand implements Listener {

    static String print = "Removed illegal from player: ";

    static FileConfiguration c = ExploitsX.getPlugin().getConfig();

    static String re = "removeeggs";
    public HashMap<Player, Integer> vl2 = new HashMap<>();
    int bookamt = 0;

    public static void clearfunc() {
        for (Player subj : Bukkit.getOnlinePlayers()) {
            for (ItemStack item : subj.getInventory().getArmorContents()) {
                if (item != null) {
                    if (item.getType().toString().equals("MONSTER_EGG")
                            || item.getType().toString().equals("MONSTER_EGGS")) {
                        if (c.getBoolean(re)) {
                            item.setAmount(0);
                        }
                    }
                    ItemMeta meta = item.getItemMeta();
                    for (String s : c.getStringList("lore-list")) {
                        if (meta.getLore() != null && !(meta.getLore().isEmpty())) {
                            for (String f : meta.getLore()) {
                                if (s.equals(f) || s.equals("xInf[]")) {
                                    item.setAmount(0);
                                    subj.damage(10.0D);
                                    API.println(print + subj.getName());
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    public static void reload() {
        c = ExploitsX.getPlugin().getConfig();
    }

    @EventHandler
    public void itemDrop(PlayerDropItemEvent e) {
        Player player = e.getPlayer();
        for (ItemStack item : player.getInventory().getContents()) {
            if (item != null && item.getType() != null) {
                if (item.getType().toString().equals("MONSTER_EGG")
                        || item.getType().toString().equals("MONSTER_EGGS")) {
                    if (c.getBoolean(re)) {
                        item.setAmount(0);
                    }
                }
                if (API.isShulkerBox(item.getType().toString())) {
                    BlockStateMeta meta = (BlockStateMeta) item.getItemMeta();
                    if (meta == null)
                        return;
                    ShulkerBox box = (ShulkerBox) meta.getBlockState();
                    if (box == null)
                        return;
                    bookamt = 0;
                    for (org.bukkit.inventory.ItemStack i : box.getInventory().getContents()) {
                        if (i != null) {
                            if (i.getType().toString().equals("MONSTER_EGG")
                                    || i.getType().toString().equals("MONSTER_EGGS")) {
                                if (c.getBoolean(re)) {
                                    i.setAmount(0);
                                }
                            }
                            if (i.getType().toString().contains("BOOK")) {
                                bookamt = bookamt + 1;
                                if (bookamt > 50) {
                                    item.setAmount(0);
                                    player.sendMessage(ChatColor.DARK_RED + "ExploitsX > Potential Book bans cleared.");
                                }
                            }
                        }
                    }
                    meta.setBlockState(box);
                    item.setItemMeta(meta);
                }
                if (c.getBoolean("itemrestriction")) {
                    ItemMeta meta = item.getItemMeta();
                    int remove = 0;
                    if ((c.getStringList("lore-list") != null && !(c.getStringList("lore-list").isEmpty()))
                            && (c.getStringList("exempt-list") != null
                            && !(c.getStringList("exempt-list").isEmpty()))) {
                        for (String p : c.getStringList("exempt-list")) {
                            if (e.getPlayer().getName().equalsIgnoreCase(p)) {
                                remove = 1;
                            }
                        }
                        if (remove == 0) {
                            for (String s : c.getStringList("lore-list")) {
                                if (meta.getLore() != null && !(meta.getLore().isEmpty())) {
                                    for (String f : meta.getLore()) {
                                        if (s.equals(f) || s.equals("xInf[]")) {
                                            item.setAmount(0);
                                            API.println(print + e.getPlayer().getName());
                                        }
                                    }
                                }
                            }
                        }
                    }
                    if (c.getStringList("limited-items") != null && !(c.getStringList("limited-items").isEmpty())) {
                        for (String s : c.getStringList("limited-items")) {
                            if (s.equals(item.getType().toString())) {
                                if (item.getAmount() > c.getInt("maxstacksize")) {
                                    item.setAmount(c.getInt("maxstacksize"));
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    @EventHandler
    public void onClick(final InventoryClickEvent e) {
        if (c.getBoolean("itemrestriction")) {
            for (org.bukkit.inventory.ItemStack item : e.getWhoClicked().getInventory().getContents()) {
                if (item != null && item.getType() != null) {
                    if (item.getType().toString().equals("MONSTER_EGG")
                            || item.getType().toString().equals("MONSTER_EGGS")) {
                        if (c.getBoolean(re)) {
                            item.setAmount(0);
                        }
                    }
                    int remove = 0;
                    if ((c.getStringList("lore-list") != null && !(c.getStringList("lore-list").isEmpty()))
                            && (c.getStringList("exempt-list") != null
                            && !(c.getStringList("exempt-list").isEmpty()))) {
                        for (String p : c.getStringList("exempt-list")) {
                            if (e.getWhoClicked().getName().equalsIgnoreCase(p)) {
                                remove = 1;
                            }
                        }
                        ItemMeta meta = item.getItemMeta();
                        if (remove == 0) {
                            for (String s : c.getStringList("lore-list")) {
                                if (meta.getLore() != null && !(meta.getLore().isEmpty())) {
                                    for (String f : meta.getLore()) {
                                        if (s.equals(f) || s.equals("xInf[]")) {
                                            item.setAmount(0);
                                            API.println(print + e.getWhoClicked().getName());
                                        }
                                    }
                                }
                            }
                        }
                    }
                    if (c.getStringList("limited-items") != null && !(c.getStringList("limited-items").isEmpty())) {
                        for (String s : c.getStringList("limited-items")) {
                            if (s.equals(item.getType().toString())) {
                                if (item.getAmount() > c.getInt("maxstacksize")) {
                                    item.setAmount(c.getInt("maxstacksize"));
                                }
                            }
                        }
                    }
                }
            }
            org.bukkit.inventory.ItemStack item = e.getWhoClicked().getInventory().getItemInOffHand();
            for (String s : c.getStringList("limited-items")) {
                if (s.equals(item.getType().toString()) && item.getAmount() > c.getInt("maxstacksize")) {
                    item.setAmount(c.getInt("maxstacksize"));
                }
            }
        }
    }

    @EventHandler
    public void onDispense(BlockDispenseEvent e) {
        ItemStack i = e.getItem();
        if (i.getType().toString().equals("MONSTER_EGG") || i.getType().toString().equals("MONSTER_EGGS")) {
            if (c.getBoolean(re)) {
                Material t = e.getBlock().getType();
                e.setCancelled(true);
                i.setAmount(0);
                if (t != Material.BEDROCK && t != Material.END_GATEWAY && t != Material.ENDER_PORTAL_FRAME
                        && t != Material.ENDER_PORTAL) {
                    e.getBlock().setType(Material.STONE);
                }
            }
        }
    }

    @EventHandler
    public void onPickup(final PlayerAttemptPickupItemEvent e) {
        new Thread(() -> {
            if (c.isBoolean("pickupcheck") && !c.getBoolean("pickupcheck"))
                return;
            Player player = e.getPlayer();
            ItemStack item = e.getItem().getItemStack();
            if (item != null && item.getType() != null) {
                if (item.getType().toString().equals("MONSTER_EGG") || item.getType().toString().equals("MONSTER_EGGS")) {
                    if (c.getBoolean(re)) {
                        item.setAmount(0);
                    }
                }
                if (API.isShulkerBox(item.getType().toString())) {
                    BlockStateMeta meta = (BlockStateMeta) item.getItemMeta();
                    if (meta == null)
                        return;
                    ShulkerBox box = (ShulkerBox) meta.getBlockState();
                    if (box == null)
                        return;
                    bookamt = 0;
                    for (org.bukkit.inventory.ItemStack i : box.getInventory().getContents()) {
                        if (i != null) {
                            if (i.getType().toString().equals("MONSTER_EGG")
                                    || i.getType().toString().equals("MONSTER_EGGS")) {
                                if (c.getBoolean(re)) {
                                    i.setAmount(0);
                                }
                            }
                            if (!c.getBoolean("enableantibookban"))
                                return;
                            if (i.getType().toString().contains("BOOK")) {
                                bookamt = bookamt + 1;
                                if (bookamt > 15) {
                                    if (c.getBoolean("cancelpickup")) {
                                        e.setCancelled(true);
                                    }
                                    if (vl2.containsKey(player)) {
                                        if (vl2.get(player) < 1) {
                                            player.sendMessage(ChatColor.DARK_RED + "ExploitsX > Potential Ban Shulker!");
                                            vl2.put(player, 1);
                                            Bukkit.getScheduler().runTaskLaterAsynchronously(ExploitsX.getPlugin(),
                                                    () -> vl2.put(e.getPlayer(), 0), 60L);
                                        }
                                    }
                                }
                            }
                        }
                    }
                    meta.setBlockState(box);
                    item.setItemMeta(meta);
                }
                org.bukkit.inventory.ItemStack item2 = e.getPlayer().getInventory().getItemInOffHand();
                for (String s : c.getStringList("limited-items")) {
                    if (item2 != null && s.equals(item2.getType().toString())
                            && item2.getAmount() > c.getInt("maxstacksize")) {
                        item2.setAmount(c.getInt("maxstacksize"));
                    }
                }
            }
        }).start();
    }

    @EventHandler
    public void Swap(PlayerSwapHandItemsEvent e) {
        new Thread(() -> {
            Player player = e.getPlayer();
            for (org.bukkit.inventory.ItemStack item : player.getInventory().getContents()) {
                if (item != null && item.getType() != null) {
                    if ((item.getType().toString().equals("MONSTER_EGG")
                            || item.getType().toString().equals("MONSTER_EGGS")) && c.getBoolean("removeeggs")) {
                        item.setAmount(0);
                    }
                    if (API.isShulkerBox(item.getType().toString())) {
                        BlockStateMeta meta = (BlockStateMeta) item.getItemMeta();
                        if (meta == null)
                            return;
                        ShulkerBox box = (ShulkerBox) meta.getBlockState();
                        if (box == null)
                            return;
                        bookamt = 0;
                        for (org.bukkit.inventory.ItemStack i : box.getInventory().getContents()) {
                            if (i != null) {
                                if ((i.getType().toString().equals("MONSTER_EGG")
                                        || i.getType().toString().equals("MONSTER_EGGS")) && c.getBoolean("removeeggs")) {
                                    i.setAmount(0);
                                }
                                if (!c.getBoolean("enableantibookban"))
                                    return;
                                if (i.getType().toString().contains("BOOK")) {
                                    bookamt = bookamt + 1;
                                    if (bookamt > 50) {
                                        item.setAmount(0);
                                        player.sendMessage(ChatColor.DARK_RED + "ExploitsX > Potential Book bans cleared.");
                                    }
                                }
                            }
                        }
                        meta.setBlockState(box);
                        item.setItemMeta(meta);
                    }
                    if (c.getBoolean("itemrestriction")) {
                        ItemMeta meta = item.getItemMeta();
                        int remove = 0;
                        if ((c.getStringList("lore-list") != null && !(c.getStringList("lore-list").isEmpty()))
                                && (c.getStringList("exempt-list") != null
                                && !(c.getStringList("exempt-list").isEmpty()))) {
                            for (String p : c.getStringList("exempt-list")) {
                                if (e.getPlayer().getName().equalsIgnoreCase(p)) {
                                    remove = 1;
                                }
                            }
                            if (remove == 0) {
                                for (String s : c.getStringList("lore-list")) {
                                    if (meta.getLore() != null && !(meta.getLore().isEmpty())) {
                                        for (String f : meta.getLore()) {
                                            if (s.equals(f) || s.equals("xInf[]")) {
                                                item.setAmount(0);
                                                API.println(print + e.getPlayer().getName());
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        if (c.getStringList("limited-items") != null && !(c.getStringList("limited-items").isEmpty())) {
                            for (String s : c.getStringList("limited-items")) {
                                if (s.equals(item.getType().toString()) && item.getAmount() > c.getInt("maxstacksize")) {
                                    item.setAmount(c.getInt("maxstacksize"));
                                }
                            }
                        }
                    }
                }
            }
            ItemStack item = e.getOffHandItem();
            if (item != null
                    && (item.getType().toString().equals("MONSTER_EGG") || item.getType().toString().equals("MONSTER_EGGS"))
                    && c.getBoolean("removeeggs")) {
                item.setAmount(0);
            }
            if (c.getBoolean("itemrestriction")) {
                for (String s : c.getStringList("limited-items")) {
                    if (item != null && s.equals(item.getType().toString())
                            && item.getAmount() > c.getInt("maxstacksize")) {
                        item.setAmount(c.getInt("maxstacksize"));
                    }
                }
            }
            if (item.getType().toString().contains("BOOK")) {
                player.sendMessage(
                        ChatColor.translateAlternateColorCodes('&', c.getString("Offhand-Server-Crash.Book-message")));
                e.getPlayer().getInventory().remove(item);
                player.damage(10.0D);
                e.setCancelled(true);
            }
        }).start();
    }
}
