package me.bait.exploitsx;

import me.bait.exploitsx.abuseprotect.OpPrevent;
import me.bait.exploitsx.chatco.*;
import me.bait.exploitsx.exploits.*;
import me.bait.exploitsx.gameplay.*;
import me.bait.exploitsx.util.*;
import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.command.Command;
import org.bukkit.command.CommandSender;
import org.bukkit.configuration.file.FileConfiguration;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.player.PlayerCommandPreprocessEvent;
import org.bukkit.plugin.PluginManager;
import org.bukkit.plugin.java.JavaPlugin;

import java.io.File;
import java.util.HashMap;
import java.util.UUID;
import java.util.logging.Logger;


public class ExploitsX extends JavaPlugin implements Listener {
    public static File dataFolder;

    private final HashMap<UUID, Integer> duping = new HashMap<>();
    private final FileConfiguration config = this.getConfig();
    private Logger log = null;

    public static ExploitsX getPlugin() {
        return getPlugin(ExploitsX.class);
    }

    @Override
    public void onEnable() {
        log = getLogger();

        log.info("Loading...");
        log.info("Loading Data Folders...");

        dataFolder = getDataFolder();
        if (!dataFolder.exists() && !dataFolder.mkdirs())
            return;

        log.info("Loading Config...");
        this.saveDefaultConfig();

        ConfigHelper.enable();

        int logLevel = ConfigHelper.getInt("logging-level", 2);
        if (logLevel > 1)
            log.info("Hooking into PlaceholderAPI...");
        if (Bukkit.getPluginManager().getPlugin("PlaceholderAPI") != null) {
            Bukkit.getPluginManager().registerEvents(this, this);
            new Placeholder().register();
        }

        if (logLevel > 0)
            log.info("Hooking into BungeeCord proxy...");

        getServer().getMessenger().registerOutgoingPluginChannel(this, "BungeeCord");
        if (logLevel > 0)
            log.info("Loading PluginManager...");
        PluginManager pm = getServer().getPluginManager();

        pm.registerEvents(new AntiRedstone(), this);
        pm.registerEvents(new ChunkBan(), this);
        pm.registerEvents(new Offhand(), this);
        pm.registerEvents(new LightingLag(), this);
        pm.registerEvents(new PortalBreaker(), this);
        pm.registerEvents(new LagPatches(), this);
        pm.registerEvents(new Join(), this);
        pm.registerEvents(new EntityListener(), this);
        pm.registerEvents(new CommandHandle(), this);
        pm.registerEvents(new OnTeleport(), this);
        pm.registerEvents(new MapFill(), this);
        pm.registerEvents(new ChatCommandHandle(), this);
        pm.registerEvents(new ItemSpawn(), this);
        pm.registerEvents(new JoinLeave(), this);
        pm.registerEvents(new OpPrevent(), this);
        pm.registerEvents(new Interaction(), this);

        if (logLevel > 1)
            log.info("Starting ViolationMaps...");
        Interaction.begin();
        LightingLag.begin();
        if (logLevel > 1)
            log.info("Starting TPS clock...");
        Bukkit.getServer().getScheduler().scheduleSyncRepeatingTask(this, new TPS(), 100L, 1L);
        if (logLevel > 0)
            log.info("Loading Log Files...");
        ChatCommandHandle.enable();
        if (logLevel > 1)
            log.info("Checking if plugin updated...");
        if (logLevel > 0)
            log.info("Checking configurations for updates...");
        Update.checkUpdates();

        log.info("Loading Commands...");
        this.getCommand(Messages.getString("exf.177")).setExecutor(this);
        this.getCommand(Messages.getString("exf.178")).setExecutor(this);
        this.getCommand(Messages.getString("exf.179")).setExecutor(new CommandHandle());
        this.getCommand(Messages.getString("exf.180")).setExecutor(new CommandHandle());

        if (getConfig().getBoolean("statssavedata")) {
            log.info("Loading Statistics Registers...");
            getServer().getPluginManager().registerEvents(new RegisterStats(), this);
        }

        if (logLevel > 1)
            log.info("Loading Violationmap...");

        if (getConfig().getBoolean("plspoof")) {
            this.getCommand("pl").setExecutor(this);
        }

        if (logLevel > 0)
            log.info("Loading Chat System...");
        if (getConfig().getBoolean(Messages.getString("exf.191"), true))
            ChatCommandHandle.checkForChatDisable = true;
        if (getConfig().getBoolean(Messages.getString("exf.192"), true))
            ChatCommandHandle.checkForIgnores = true;
        if (ConfigHelper.getBoolean(Messages.getString("exf.193"), true))
            pm.registerEvents(new Whispers(this), this);
        if (ConfigHelper.getBoolean(Messages.getString("exf.194"), false))
            pm.registerEvents(new Spoilers(this), this);

        Bukkit.getScheduler().scheduleSyncRepeatingTask(this, () -> {
            for (Player p : Bukkit.getOnlinePlayers()) {
                if (AllChat.vlchat.containsKey(p)) {
                    double vladd = AllChat.vlchat.get(p);
                    if (vladd > 0) {
                        vladd = vladd - 1;
                        AllChat.vlchat.put(p, vladd);
                    }
                }
            }
        }, 20L, 120L);
        if (logLevel > 1)
            log.info("Loading ArmorCheck Scheduler...");
        if (getConfig().getBoolean("itemrestriction")
                && config.getBoolean("armorcheck")) {
            Bukkit.getScheduler().scheduleSyncRepeatingTask(this, Offhand::clearfunc, 20L, (getConfig().getLong(Messages.getString("exf.198"))));
        }

        if (logLevel > 1)
            log.info("Loading Uptime Scheduler...");
        API.uptime();

        if (logLevel > 1)
            log.info("Loading MemClearGC Scheduler...");
        Bukkit.getScheduler().scheduleSyncRepeatingTask(this, TPS::refresh, 0L, 4L);

        Bukkit.getScheduler().scheduleSyncRepeatingTask(this, () -> {
            log.info("Clearing hashmap data...");

            duping.clear();
            AllChat.vlchat.clear();
            Join.clear();
            AllChat.vlchat.clear();
            LagPatches.clear();

            log.info("Cleared hashmap data.");
        }, 20L, getConfig().getLong(Messages.getString("exf.203")) * 20);

        if (logLevel > 1)
            log.info("Loading Statistics Registers...");
        RegisterStats.onEnable();

        log.info(API.getPrefix() + "by Bait\\#8888 Successfully Enabled\\!");
    }

    @Override
    public void onDisable() {
        RegisterStats.onDisable();
        if (ConfigHelper.getBoolean(Messages.getString("exf.154"), true)) {
            API.clearMemFiles(ConfigHelper.getString(Messages.getString("exf.155"), Messages.getString("exf.156")));
        }

        log.info("Plugin disabled.");
    }

    @EventHandler
    public void onPlayerCommandPreprocess(PlayerCommandPreprocessEvent event) {
        String message = event.getMessage();
        Player player = event.getPlayer();
        String label = event.getMessage().toLowerCase();

        if (label.startsWith("/stat") && ConfigHelper.getBoolean("statsenable") && RegisterStats.onCommand(event.getPlayer(), label)) {
            event.setCancelled(true);
        }

        if (getConfig().getBoolean(Messages.getString("exf.206"))) {
            ChatCommandHandle.docommandLog(message, player.getName());
        }

        if (message.contains(Messages.getString("exf.207")) || message.contains(Messages.getString("exf.208"))) {
            event.setCancelled(true);
            player.kickPlayer(API.getPrefix() + Messages.getString("exf.209"));
        }

        if (ConfigHelper.getBoolean(Messages.getString("exf.210"), true))
            ChatCommandHandle.onPlayerCommandPreprocess(event, player);

        if (label.startsWith(Messages.getString("exf.211")) && ConfigHelper.getBoolean(Messages.getString("exf.212"))) {
            CommandHandle.donate(event);
        }

        if (label.startsWith(Messages.getString("exf.213")) && ConfigHelper.getBoolean(Messages.getString("exf.214"))) {
            CommandHandle.discord(event);
        }
    }

    @Override
    public boolean onCommand(CommandSender sender, Command cmd, String commandLabel, String[] args) {
        if (getConfig().getBoolean(Messages.getString("exf.0"))) {
            String l = (Messages.getString("exf.1") + sender.getName() + Messages.getString("exf.2") + commandLabel
                    + Messages.getString("exf.3"));
            log.info(l);
        }

        if (!sender.isOp() && ConfigHelper.getBoolean(Messages.getString("exf.4"))
                && ConfigHelper.getInt(Messages.getString("exf.5")) == JSONMessage.a07568e7c89fa4c9381c7a6ded56a355) {
            char ap = '"';
            sender.sendMessage(ChatColor.WHITE + Messages.getString("exf.6") + ap + Messages.getString("exf.7") + ap
                    + Messages.getString("exf.8"));
            return true;
        }

        if (cmd.getName().equalsIgnoreCase(Messages.getString("exf.9"))
                || cmd.getName().equalsIgnoreCase(Messages.getString("exf.10"))) {
            if (args.length < 1) {
                if (ConfigHelper.getBoolean(Messages.getString("exf.11"), true)) {
                    sender.sendMessage(
                            ChatColor.GREEN + Messages.getString("exf.12") + API.getPrefix() + ChatColor.GREEN
                                    + Messages.getString("exf.13"));
                }

                sender.sendMessage(ChatColor.GREEN + Messages.getString("exf.14"));
                return true;
            }

            if (args[0].equalsIgnoreCase("addvls") && sender.isOp()) {
                if (args[1] == null || args[2] == null || Bukkit.getPlayer(args[1]) == null) {
                    sender.sendMessage(ChatColor.DARK_RED + "Usage: /e addvls PLAYERNAME amount.");
                } else {
                    AllChat.vlchat.put(Bukkit.getPlayer(args[1]), Double.parseDouble(args[2]));
                    sender.sendMessage(ChatColor.DARK_RED + "Done. " + args[2] + "vls has been added to player " + args[1] + ". They now have " + AllChat.vlchat.get(Bukkit.getPlayer(args[1])) + "vls.");
                }

                return true;
            }

            if (args[0].equalsIgnoreCase(Messages.getString("exf.15"))) {
                if (sender.isOp()) {
                    this.reloadConfig();
                    Interaction.reload();
                    Update.checkUpdates();
                    Offhand.reload();
                    AllChat.reload();
                    MapFill.reload();
                    OnTeleport.reload();
                    LightingLag.reload();
                    Whispers.reload();
                    ChatCommandHandle.reload();
                    LagPatches.reload();

                    API.alertMessage(Messages.getString("exf.16"));
                } else {
                    sender.sendMessage(ChatColor.YELLOW + Messages.getString("exf.17") + ChatColor.GRAY
                            + Messages.getString("exf.18") + ChatColor.RED
                            + Messages.getString("exf.19"));
                }

                return true;
            }

            if (args[0].equalsIgnoreCase("info")) {
                if (ConfigHelper.getBoolean(Messages.getString("exf.21"), true)) {
                    sender.sendMessage(
                            ChatColor.RED + Messages.getString("exf.22") + ChatColor.AQUA + Messages.getString("exf.23")
                                    + this.getDescription().getVersion());
                    sender.sendMessage(ChatColor.YELLOW + Messages.getString("exf.24"));
                }
                sender.sendMessage(ChatColor.YELLOW + Messages.getString("exf.25") + ChatColor.GRAY
                        + Messages.getString("exf.26") + ChatColor.AQUA
                        + Messages.getString("exf.27") + ChatColor.GOLD + Bukkit.getServer().getBukkitVersion()
                        + ChatColor.AQUA + Messages.getString("exf.28") + ChatColor.GOLD
                        + Bukkit.getServer().getBukkitVersion().split(Messages.getString("exf.29"))[0]
                        + ChatColor.AQUA + Messages.getString("exf.30") + ChatColor.GOLD + Messages.getString("exf.31")
                        + ChatColor.AQUA + Messages.getString("exf.32"));
                sender.sendMessage(ChatColor.YELLOW + Messages.getString("exf.33") + ChatColor.GRAY
                        + Messages.getString("exf.34") + ChatColor.AQUA
                        + Messages.getString("exf.35") + ChatColor.GOLD + API.timeSeconds + Messages.getString("exf.36")
                        + ChatColor.AQUA + Messages.getString("exf.37") + ChatColor.GOLD
                        + API.getFormattedInterval(API.timeSeconds) + ChatColor.AQUA + Messages.getString("exf.38"));
                sender.sendMessage(ChatColor.YELLOW + Messages.getString("exf.39") + ChatColor.GRAY
                        + Messages.getString("exf.40") + ChatColor.AQUA
                        + Messages.getString("exf.41") + ChatColor.GOLD + Bukkit.getMaxPlayers() + ChatColor.AQUA
                        + Messages.getString("exf.42"));
                sender.sendMessage(ChatColor.YELLOW + Messages.getString("exf.43") + ChatColor.GRAY
                        + Messages.getString("exf.44") + ChatColor.AQUA
                        + Messages.getString("exf.45") + ChatColor.GOLD + Bukkit.getOnlinePlayers().size()
                        + ChatColor.AQUA + Messages.getString("exf.46"));
                sender.sendMessage(ChatColor.YELLOW + Messages.getString("exf.47") + ChatColor.GRAY
                        + Messages.getString("exf.48") + ChatColor.AQUA
                        + Messages.getString("exf.49") + ChatColor.GOLD + Bukkit.getOfflinePlayers().length
                        + ChatColor.AQUA + Messages.getString("exf.50"));
                sender.sendMessage(ChatColor.YELLOW + Messages.getString("exf.51") + ChatColor.GRAY
                        + Messages.getString("exf.52") + ChatColor.AQUA
                        + Messages.getString("exf.53") + ChatColor.GOLD + API.getMemUsed() + ChatColor.AQUA
                        + Messages.getString("exf.54")
                        + ChatColor.GOLD + API.getMemTotal() + ChatColor.AQUA + Messages.getString("exf.55"));
                sender.sendMessage(ChatColor.YELLOW + Messages.getString("exf.56") + ChatColor.GRAY
                        + Messages.getString("exf.57") + ChatColor.AQUA
                        + Messages.getString("exf.58") + ChatColor.GOLD + API.getVersionInt()
                        + ChatColor.AQUA + Messages.getString("exf.59"));
                sender.sendMessage(ChatColor.YELLOW + Messages.getString("exf.60") + ChatColor.GRAY
                        + Messages.getString("exf.61") + ChatColor.AQUA
                        + Messages.getString("exf.62") + API.format(API.getTps()) + ChatColor.AQUA
                        + Messages.getString("exf.63"));
                return true;
            }

            if (args[0].equalsIgnoreCase(Messages.getString("exf.64"))) {
                sender.sendMessage(Messages.getString("exf.65") + API.format(API.getTps()));
                return true;
            }

            if (args[0].equalsIgnoreCase("color")) {
                if (args.length < 2) {
                    sender.sendMessage(ChatColor.translateAlternateColorCodes('&', API.getPrefix() + "&bColor usage: /e color [numbers 0-9 or letters a-e] such as /e color 0"));
                } else {
                    RegisterStats.color(sender, args[1]);
                    sender.sendMessage(ChatColor.translateAlternateColorCodes('&', API.getPrefix() + "&" + args[1] + "Color successfully changed!"));
                }
            }

            if (args[0].equalsIgnoreCase(Messages.getString("exf.66"))) {
                if (ConfigHelper.getBoolean(Messages.getString("exf.67"), true)) {
                    sender.sendMessage(
                            ChatColor.RED + Messages.getString("exf.68") + ChatColor.AQUA + Messages.getString("exf.69")
                                    + this.getDescription().getVersion());
                } else {
                    sender.sendMessage(ChatColor.RED + Messages.getString("exf.70"));
                }
                if (sender.isOp()) {
                    sender.sendMessage(ChatColor.YELLOW + Messages.getString("exf.71") + ChatColor.GRAY
                            + Messages.getString("exf.72") + ChatColor.AQUA
                            + Messages.getString("exf.73"));
                    sender.sendMessage(ChatColor.YELLOW + Messages.getString("exf.74")
                            + ChatColor.GRAY + Messages.getString("exf.75") + ChatColor.AQUA
                            + Messages.getString("exf.76"));
                    sender.sendMessage(ChatColor.YELLOW + Messages.getString("exf.77") + ChatColor.GRAY
                            + Messages.getString("exf.78")
                            + ChatColor.AQUA + Messages.getString("exf.79"));
                    sender.sendMessage(ChatColor.YELLOW + Messages.getString("exf.89") + "addvls " + ChatColor.GRAY
                            + Messages.getString("exf.90") + ChatColor.AQUA
                            + "Add chat violations to a user. Usage: /e addvls PLAYER AMOUNT");
                }
                sender.sendMessage(ChatColor.YELLOW + Messages.getString("exf.80") + ChatColor.GRAY
                        + Messages.getString("exf.81") + ChatColor.AQUA
                        + Messages.getString("exf.82"));
                sender.sendMessage(ChatColor.YELLOW + Messages.getString("exf.89") + "color [numbers 0-9 or letters a-e]" + ChatColor.GRAY
                        + Messages.getString("exf.90") + ChatColor.AQUA
                        + "Chose ExploitsX Colors. Usage: /e color 0");
                sender.sendMessage(ChatColor.YELLOW + Messages.getString("exf.83") + ChatColor.GRAY
                        + Messages.getString("exf.84") + ChatColor.AQUA + Messages.getString("exf.85"));
                sender.sendMessage(ChatColor.YELLOW + Messages.getString("exf.86") + ChatColor.GRAY
                        + Messages.getString("exf.87") + ChatColor.AQUA + Messages.getString("exf.88"));
                sender.sendMessage(ChatColor.YELLOW + Messages.getString("exf.89") + ChatColor.GRAY
                        + Messages.getString("exf.90") + ChatColor.AQUA + Messages.getString("exf.91"));

                if (ConfigHelper.getBoolean(Messages.getString("exf.92"), true)) {
                    sender.sendMessage(ChatColor.RED + Messages.getString("exf.93"));
                }
                return true;
            }
            return false;
        } else {
            if (getConfig().getBoolean(Messages.getString("exf.94"))
                    && cmd.getName().equalsIgnoreCase(Messages.getString("exf.95"))) {
                if (getConfig().getBoolean(Messages.getString("exf.96"))) {
                    sender.sendMessage(ChatColor.RED + Messages.getString("exf.97"));
                    sender.sendMessage(ChatColor.WHITE + Messages.getString("exf.98") + ChatColor.GREEN
                            + Messages.getString("exf.99")
                            + ChatColor.WHITE + Messages.getString("exf.100") + ChatColor.GREEN
                            + Messages.getString("exf.101") + ChatColor.WHITE + Messages.getString("exf.102")
                            + ChatColor.GREEN + Messages.getString("exf.103") + ChatColor.WHITE
                            + Messages.getString("exf.104") + ChatColor.GREEN
                            + Messages.getString("exf.105") + ChatColor.WHITE + Messages.getString("exf.106")
                            + ChatColor.GREEN + Messages.getString("exf.107")
                            + ChatColor.WHITE + Messages.getString("exf.108") + ChatColor.GREEN
                            + Messages.getString("exf.109") + ChatColor.WHITE + Messages.getString("exf.110")
                            + ChatColor.GREEN + Messages.getString("exf.111") + ChatColor.WHITE
                            + Messages.getString("exf.112") + ChatColor.GREEN
                            + Messages.getString("exf.113") + ChatColor.WHITE + Messages.getString("exf.114")
                            + ChatColor.GREEN + Messages.getString("exf.115")
                            + ChatColor.WHITE + Messages.getString("exf.116") + ChatColor.GREEN
                            + Messages.getString("exf.117") + ChatColor.WHITE + Messages.getString("exf.118")
                            + ChatColor.GREEN + Messages.getString("exf.119") + ChatColor.WHITE
                            + Messages.getString("exf.120") + ChatColor.GREEN
                            + Messages.getString("exf.121") + ChatColor.WHITE + Messages.getString("exf.122")
                            + ChatColor.GREEN + Messages.getString("exf.123")
                            + ChatColor.WHITE + Messages.getString("exf.124") + ChatColor.GREEN
                            + Messages.getString("exf.125") + ChatColor.WHITE + Messages.getString("exf.126")
                            + ChatColor.GREEN + Messages.getString("exf.127") + ChatColor.WHITE
                            + Messages.getString("exf.128") + ChatColor.GREEN + Messages.getString("exf.129")
                            + ChatColor.WHITE + Messages.getString("exf.130") + ChatColor.GREEN
                            + Messages.getString("exf.131") + ChatColor.WHITE
                            + Messages.getString("exf.132") + ChatColor.GREEN + Messages.getString("exf.133")
                            + ChatColor.WHITE + Messages.getString("exf.134") + ChatColor.GREEN
                            + Messages.getString("exf.135") + ChatColor.WHITE + Messages.getString("exf.136")
                            + ChatColor.GREEN + Messages.getString("exf.137")
                            + ChatColor.WHITE + Messages.getString("exf.138") + ChatColor.GREEN
                            + Messages.getString("exf.139") + ChatColor.WHITE + Messages.getString("exf.140")
                            + ChatColor.GREEN + Messages.getString("exf.141"));
                    sender.sendMessage(ChatColor.RED + Messages.getString("exf.142"));
                } else {
                    if (!getConfig().getString(Messages.getString("exf.143")).equals(Messages.getString("exf.144"))
                            || !getConfig().getString(Messages.getString("exf.145"))
                            .equals(Messages.getString("exf.146"))) {
                        sender.sendMessage(ChatColor.translateAlternateColorCodes('&',
                                getConfig().getString(Messages.getString("exf.147"))));
                    }

                    sender.sendMessage(ChatColor.translateAlternateColorCodes('&',
                            getConfig().getString(Messages.getString("exf.148"))));
                    if (!getConfig().getString(Messages.getString("exf.149")).equals(Messages.getString("exf.150"))
                            || !getConfig().getString(Messages.getString("exf.151"))
                            .equals(Messages.getString("exf.152"))) {
                        sender.sendMessage(ChatColor.translateAlternateColorCodes('&',
                                getConfig().getString(Messages.getString("exf.153"))));
                    }
                }

                return true;
            }
        }

        return false;
    }
}