package me.bait.exploitsx.chatco;

import me.bait.exploitsx.ExploitsX;
import me.bait.exploitsx.Messages;
import me.bait.exploitsx.gameplay.RegisterStats;
import me.bait.exploitsx.util.API;
import me.bait.exploitsx.util.ConfigHelper;
import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.configuration.file.YamlConfiguration;
import org.bukkit.entity.Player;
import org.bukkit.event.player.AsyncPlayerChatEvent;
import org.bukkit.event.player.PlayerQuitEvent;

import java.io.IOException;
import java.text.Normalizer;
import java.util.HashMap;
import java.util.List;

public class AllChat {
    public static final HashMap<Player, Integer> socialspy = new HashMap<>();
    private static final String CANCEL = Messages.getString("AC.0");
    private static final String zz = "!#";
    private static final HashMap<Player, String> lastm = new HashMap<>();
    private static final HashMap<Player, String> lastm2 = new HashMap<>();
    private static final HashMap<Player, String> lastm3 = new HashMap<>();
    private static final HashMap<Player, String> lastm4 = new HashMap<>();
    private static final HashMap<Player, String> lastm5 = new HashMap<>();
    private static final HashMap<Player, String> lastm6 = new HashMap<>();
    public static ExploitsX plugin;
    public static HashMap<Player, Double> vlchat = new HashMap<>();
    private static boolean debug = ConfigHelper.getBoolean(Messages.getString("AC.4"), false);
    private static boolean useai = ConfigHelper.getBoolean(Messages.getString("AC.172"), true);
    private static boolean logflags = ConfigHelper.getBoolean(Messages.getString("AC.188"));
    private static boolean alerttoadmins = ConfigHelper.getBoolean(Messages.getString("AC.193"), false);
    private static boolean chatfilter = ConfigHelper.getBoolean(Messages.getString("AC.142"), true);

    private static int kickpoint = ConfigHelper.getInt(Messages.getString("AC.203"), 20);
    private static int tippingpoint = ConfigHelper.getInt(Messages.getString("AC.199"), 15);
    private static double similarity = ConfigHelper.getDouble(Messages.getString("AC.3"));

    private static List<String> blacklistwords = ConfigHelper.getStringList(Messages.getString("AC.179"));
    private static List<String> redflagwords = ConfigHelper.getStringList(Messages.getString("AC.187"));
    private static List<String> chatexempt = ConfigHelper.getStringList(Messages.getString("AC.178"));
    private static List<String> swhitelist = ConfigHelper.getStringList(Messages.getString("AC.2"));

    private static String spamsg = ConfigHelper.getString(Messages.getString("AC.5"));
    private static String a = ConfigHelper.getString(Messages.getString("AC.6"));
    private static String c = ConfigHelper.getString(Messages.getString("AC.8"));
    private static String d = ConfigHelper.getString(Messages.getString("AC.9"));
    private static String f = ConfigHelper.getString(Messages.getString("AC.11"));
    private static String g = ConfigHelper.getString(Messages.getString("AC.12"));
    private static String i = ConfigHelper.getString(Messages.getString("AC.14"));
    private static String j = ConfigHelper.getString(Messages.getString("AC.15"));
    private static String l = ConfigHelper.getString(Messages.getString("AC.17"));
    private static String m = ConfigHelper.getString(Messages.getString("AC.18"));

    private static String n = ConfigHelper.getString(Messages.getString("AC.21"));
    private static String o = ConfigHelper.getString(Messages.getString("AC.24"));
    private static String p = ConfigHelper.getString(Messages.getString("AC.27"));
    private static String q = ConfigHelper.getString(Messages.getString("AC.30"));
    private static String r = ConfigHelper.getString(Messages.getString("AC.33"));
    private static String s = ConfigHelper.getString(Messages.getString("AC.36"));
    private static String t = ConfigHelper.getString(Messages.getString("AC.39"));
    private static String u = ConfigHelper.getString(Messages.getString("AC.42"));
    private static String v = ConfigHelper.getString(Messages.getString("AC.45"));

    private static String w = ConfigHelper.getString(Messages.getString("AC.48"));
    private static String x = ConfigHelper.getString(Messages.getString("AC.51"));
    private static String y = ConfigHelper.getString(Messages.getString("AC.54"));
    private static String z = ConfigHelper.getString(Messages.getString("AC.57"));
    private static String aa = ConfigHelper.getString(Messages.getString("AC.60"));
    private static String ab = ConfigHelper.getString(Messages.getString("AC.63"));
    private static String ac = ConfigHelper.getString(Messages.getString("AC.20"));
    private static String ad = ConfigHelper.getString(Messages.getString("AC.23"));
    private static String ae = ConfigHelper.getString(Messages.getString("AC.26"));

    private static String af = ConfigHelper.getString(Messages.getString("AC.29"));
    private static String ag = ConfigHelper.getString(Messages.getString("AC.32"));
    private static String ah = ConfigHelper.getString(Messages.getString("AC.35"));
    private static String ai = ConfigHelper.getString(Messages.getString("AC.38"));
    private static String aj = ConfigHelper.getString(Messages.getString("AC.41"));
    private static String ak = ConfigHelper.getString(Messages.getString("AC.44"));
    private static String al = ConfigHelper.getString(Messages.getString("AC.47"));
    private static String am = ConfigHelper.getString(Messages.getString("AC.50"));
    private static String an = ConfigHelper.getString(Messages.getString("AC.53"));

    private static String ao = ConfigHelper.getString(Messages.getString("AC.56"));
    private static String ap = ConfigHelper.getString(Messages.getString("AC.59"));
    private static String aq = ConfigHelper.getString(Messages.getString("AC.62"));
    private static String ar = ConfigHelper.getString(Messages.getString("AC.65"));

    private static String as = ConfigHelper.getString(Messages.getString("AC.66"), zz);
    private static String at = ConfigHelper.getString(Messages.getString("AC.70"), zz);
    private static String au = ConfigHelper.getString(Messages.getString("AC.74"), zz);
    private static String av = ConfigHelper.getString(Messages.getString("AC.78"), zz);
    private static String aw = ConfigHelper.getString(Messages.getString("AC.82"), zz);
    private static String ax = ConfigHelper.getString(Messages.getString("AC.86"), zz);
    private static String ay = ConfigHelper.getString(Messages.getString("AC.90"), zz);

    private static String az = ConfigHelper.getString(Messages.getString("AC.94"), zz);
    private static String ba = ConfigHelper.getString(Messages.getString("AC.98"), zz);
    private static String bb = ConfigHelper.getString(Messages.getString("AC.102"), zz);
    private static String bc = ConfigHelper.getString(Messages.getString("AC.106"), zz);
    private static String bd = ConfigHelper.getString(Messages.getString("AC.110"), zz);
    private static String be = ConfigHelper.getString(Messages.getString("AC.114"), zz);
    private static String bf = ConfigHelper.getString(Messages.getString("AC.118"), zz);

    private static String bg = ConfigHelper.getString(Messages.getString("AC.122"), zz);
    private static String bh = ConfigHelper.getString(Messages.getString("AC.126"), zz);
    private static String bi = ConfigHelper.getString(Messages.getString("AC.130"), zz);
    private static String bj = ConfigHelper.getString(Messages.getString("AC.134"), zz);
    private static String bk = ConfigHelper.getString(Messages.getString("AC.138"), zz);

    public AllChat(ExploitsX plugin) {
        AllChat.plugin = plugin;
    }

    public static String ColorCodeManager(String data) {
        if (!a.equals(Messages.getString("AC.7")))
            data = data.replace(c, ChatColor.WHITE.toString()); // $NON-NLS-1$
        if (!d.equals(Messages.getString("AC.10")))
            data = data.replace(f, ChatColor.RED.toString()); // $NON-NLS-1$
        if (!g.equals(Messages.getString("AC.13")))
            data = data.replace(i, ChatColor.BLACK.toString()); // $NON-NLS-1$
        if (!j.equals(Messages.getString("AC.16")))
            data = data.replace(l, ChatColor.DARK_RED.toString()); // $NON-NLS-1$
        if (!m.equals(Messages.getString("AC.19")))
            data = data.replace(ac, ChatColor.DARK_GRAY.toString()); // $NON-NLS-1$
        if (!n.equals(Messages.getString("AC.22")))
            data = data.replace(ad, ChatColor.DARK_BLUE.toString()); // $NON-NLS-1$
        if (!o.equals(Messages.getString("AC.25")))
            data = data.replace(ae, ChatColor.DARK_PURPLE.toString()); // $NON-NLS-1$
        if (!p.equals(Messages.getString("AC.28")))
            data = data.replace(af, ChatColor.BLUE.toString()); // $NON-NLS-1$
        if (!q.equals(Messages.getString("AC.31")))
            data = data.replace(ag, ChatColor.LIGHT_PURPLE.toString()); // $NON-NLS-1$
        if (!r.equals(Messages.getString("AC.34")))
            data = data.replace(ah, ChatColor.DARK_GREEN.toString()); // $NON-NLS-1$
        if (!s.equals(Messages.getString("AC.37")))
            data = data.replace(ai, ChatColor.GOLD.toString()); // $NON-NLS-1$
        if (!t.equals(Messages.getString("AC.40")))
            data = data.replace(aj, ChatColor.GREEN.toString()); // $NON-NLS-1$
        if (!u.equals(Messages.getString("AC.43")))
            data = data.replace(ak, ChatColor.YELLOW.toString()); // $NON-NLS-1$
        if (!v.equals(Messages.getString("AC.46")))
            data = data.replace(al, ChatColor.DARK_AQUA.toString()); // $NON-NLS-1$
        if (!w.equals(Messages.getString("AC.49")))
            data = data.replace(am, ChatColor.AQUA.toString()); // $NON-NLS-1$
        if (!x.equals(Messages.getString("AC.52")))
            data = data.replace(an, ChatColor.GRAY.toString()); // $NON-NLS-1$
        if (!y.equals(Messages.getString("AC.55")))
            data = data.replace(ao, ChatColor.BOLD.toString()); // $NON-NLS-1$
        if (!z.equals(Messages.getString("AC.58")))
            data = data.replace(ap, ChatColor.ITALIC.toString()); // $NON-NLS-1$
        if (!aa.equals(Messages.getString("AC.61")))
            data = data.replace(aq, ChatColor.UNDERLINE.toString()); // $NON-NLS-1$
        if (!ab.equals(Messages.getString("AC.64")))
            data = data.replace(ar, ChatColor.STRIKETHROUGH.toString()); // $NON-NLS-1$
        if (data.length() == 2 && (data.contains(ChatColor.WHITE.toString()) || data.contains(ChatColor.RED.toString())
                || data.contains(ChatColor.BLACK.toString()) || data.contains(ChatColor.DARK_RED.toString())
                || data.contains(ChatColor.DARK_GRAY.toString()) || data.contains(ChatColor.DARK_BLUE.toString())
                || data.contains(ChatColor.DARK_PURPLE.toString()) || data.contains(ChatColor.BLUE.toString())
                || data.contains(ChatColor.LIGHT_PURPLE.toString()) || data.contains(ChatColor.DARK_GREEN.toString())
                || data.contains(ChatColor.GOLD.toString()) || data.contains(ChatColor.GREEN.toString())
                || data.contains(ChatColor.YELLOW.toString()) || data.contains(ChatColor.DARK_AQUA.toString())
                || data.contains(ChatColor.AQUA.toString()) || data.contains(ChatColor.GRAY.toString())
                || data.contains(ChatColor.BOLD.toString()) || data.contains(ChatColor.ITALIC.toString())
                || data.contains(ChatColor.UNDERLINE.toString()) || data.contains(ChatColor.STRIKETHROUGH.toString())))
            return CANCEL;
        return data;
    }

    public static String ColorManager(String msg) {
        if ((!as // $NON-NLS-1$
                .equals(Messages.getString("AC.68")))
                && (msg.startsWith(ConfigHelper.getString(Messages.getString("AC.69")))))
            msg = ChatColor.GREEN.toString() + msg;
        if (!at.equals(Messages.getString("AC.72"))
                && msg.startsWith(ConfigHelper.getString(Messages.getString("AC.73"))))
            msg = ChatColor.BLUE.toString() + msg;
        if (!au.equals(zz) // $NON-NLS-1$
                && msg.startsWith(ConfigHelper.getString(Messages.getString("AC.77"))))
            msg = ChatColor.RED.toString() + msg;
        if (!av.equals(zz) // $NON-NLS-1$
                && msg.startsWith(ConfigHelper.getString(Messages.getString("AC.81"))))
            msg = ChatColor.AQUA.toString() + msg;
        if (!aw.equals(zz) // $NON-NLS-1$
                && msg.startsWith(ConfigHelper.getString(Messages.getString("AC.85"))))
            msg = ChatColor.GOLD.toString() + msg;
        if (!ax.equals(zz) // $NON-NLS-1$
                && msg.startsWith(ConfigHelper.getString(Messages.getString("AC.89"))))
            msg = ChatColor.YELLOW.toString() + msg;
        if (!ay.equals(zz) // $NON-NLS-1$
                && msg.startsWith(ConfigHelper.getString(Messages.getString("AC.93"))))
            msg = ChatColor.GRAY.toString() + msg;
        if (!az.equals(zz) // $NON-NLS-1$
                && msg.startsWith(ConfigHelper.getString(Messages.getString("AC.97"))))
            msg = ChatColor.BLACK.toString() + msg;
        if (!ba.equals(zz) // $NON-NLS-1$
                && msg.startsWith(ConfigHelper.getString(Messages.getString("AC.101"))))
            msg = ChatColor.DARK_GREEN.toString() + msg;
        if (!bb // $NON-NLS-1$
                .equals(zz) // $NON-NLS-1$
                && msg.startsWith(ConfigHelper.getString(Messages.getString("AC.105"))))
            msg = ChatColor.DARK_RED.toString() + msg;
        if (!bc // $NON-NLS-1$
                .equals(zz) // $NON-NLS-1$
                && msg.startsWith(ConfigHelper.getString(Messages.getString("AC.109"))))
            msg = ChatColor.DARK_GRAY.toString() + msg;
        if (!bd // $NON-NLS-1$
                .equals(zz) // $NON-NLS-1$
                && msg.startsWith(ConfigHelper.getString(Messages.getString("AC.113"))))
            msg = ChatColor.DARK_BLUE.toString() + msg;
        if (!be // $NON-NLS-1$
                .equals(zz) // $NON-NLS-1$
                && msg.startsWith(ConfigHelper.getString(Messages.getString("AC.117"))))
            msg = ChatColor.DARK_AQUA.toString() + msg;
        if (!bf // $NON-NLS-1$
                .equals(zz) // $NON-NLS-1$
                && msg.startsWith(ConfigHelper.getString(Messages.getString("AC.121"))))
            msg = ChatColor.DARK_PURPLE.toString() + msg;
        if (!bg // $NON-NLS-1$
                .equals(zz) // $NON-NLS-1$
                && msg.startsWith(ConfigHelper.getString(Messages.getString("AC.125"))))
            msg = ChatColor.LIGHT_PURPLE.toString() + msg;
        if (!bh // $NON-NLS-1$
                .equals(zz) // $NON-NLS-1$
                && msg.startsWith(ConfigHelper.getString(Messages.getString("AC.129"))))
            msg = ChatColor.UNDERLINE.toString() + msg;
        if (!bi // $NON-NLS-1$
                .equals(zz) // $NON-NLS-1$
                && msg.startsWith(ConfigHelper.getString(Messages.getString("AC.133"))))
            msg = ChatColor.ITALIC.toString() + msg;
        if (!bj // $NON-NLS-1$
                .equals(zz) // $NON-NLS-1$
                && msg.startsWith(ConfigHelper.getString(Messages.getString("AC.137"))))
            msg = ChatColor.BOLD.toString() + msg;
        if (!bk // $NON-NLS-1$
                .equals(zz) // $NON-NLS-1$
                && msg.startsWith(ConfigHelper.getString(Messages.getString("AC.141"))))
            msg = ChatColor.STRIKETHROUGH.toString() + msg;
        return msg;
    }

    public static boolean containsCaseInsensitive(String s, List<String> l) {
        for (String string : l) {
            if (string.equalsIgnoreCase(s)) {
                return true;
            }
        }
        return false;
    }

    public static int onChat(String str, Player pla) {
        int cancelled = 0;
        int bad = 0;
        double vladd = 0.0;
        int risk = 0;
        // similarity
        if (chatfilter) { // $NON-NLS-1$
            String[] norme = {Messages.getString("AC.143"), Messages.getString("AC.144"), Messages.getString("AC.145"),
                    Messages.getString("AC.146"), Messages.getString("AC.147"), Messages.getString("AC.148"),
                    Messages.getString("AC.149"), Messages.getString("AC.150"), Messages.getString("AC.151"),
                    Messages.getString("AC.152"), Messages.getString("AC.153"), Messages.getString("AC.154"),
                    Messages.getString("AC.155"),
                    Messages.getString("AC.156"), Messages.getString("AC.157"), Messages.getString("AC.158"),
                    Messages.getString("AC.159"), Messages.getString("AC.160"), Messages.getString("AC.161"),
                    Messages.getString("AC.162"), Messages.getString("AC.163")};
            String newm = Normalizer.normalize(str.toLowerCase(), Normalizer.Form.NFD)
                    .replace(Messages.getString("AC.164"), Messages.getString("AC.165"))
                    .toLowerCase();
            for (String i : norme) {
                newm = newm.replaceAll(i, Messages.getString("AC.166"));
            }
            if (debug) {
                API.println(Messages.getString("AC.167") + pla.getName() + Messages.getString("AC.168") + str
                        + Messages.getString("AC.169"));
                API.println(Messages.getString("AC.170") + newm + Messages.getString("AC.171"));
            }
            if (useai) { // $NON-NLS-1$
                if (similarity > 1.0 || similarity < 0.0) {
                    Bukkit.getLogger().warning(Messages.getString("AC.173"));
                } else {
                    if (!lastm.containsKey(pla)) {
                        lastm.put(pla, newm);
                    } else if (!lastm2.containsKey(pla)) {
                        String one = lastm.get(pla);
                        lastm.put(pla, newm);
                        lastm2.put(pla, one);
                        if (Similarity.getSimilarity(lastm.get(pla), lastm2.get(pla)) >= similarity) {
                            risk++;
                        }
                    } else if (!lastm3.containsKey(pla)) {
                        String one = lastm.get(pla);
                        String two = lastm2.get(pla);
                        lastm.put(pla, newm);
                        lastm2.put(pla, one);
                        lastm3.put(pla, two);
                        if (Similarity.getSimilarity(lastm.get(pla), lastm2.get(pla)) >= similarity) {
                            risk++;
                        }
                        if (Similarity.getSimilarity(lastm.get(pla), lastm3.get(pla)) >= similarity) {
                            risk++;
                        }
                    } else if (!lastm4.containsKey(pla)) {
                        String one = lastm.get(pla);
                        String two = lastm2.get(pla);
                        String three = lastm3.get(pla);
                        lastm.put(pla, newm);
                        lastm2.put(pla, one);
                        lastm3.put(pla, two);
                        lastm4.put(pla, three);
                        if (Similarity.getSimilarity(lastm.get(pla), lastm2.get(pla)) >= similarity) {
                            risk++;
                        }
                        if (Similarity.getSimilarity(lastm.get(pla), lastm3.get(pla)) >= similarity) {
                            risk++;
                        }
                        if (Similarity.getSimilarity(lastm.get(pla), lastm4.get(pla)) >= similarity) {
                            risk++;
                        }
                    } else if (!lastm5.containsKey(pla)) {
                        String one = lastm.get(pla);
                        String two = lastm2.get(pla);
                        String three = lastm3.get(pla);
                        String four = lastm4.get(pla);
                        lastm.put(pla, newm);
                        lastm2.put(pla, one);
                        lastm3.put(pla, two);
                        lastm4.put(pla, three);
                        lastm5.put(pla, four);
                        if (Similarity.getSimilarity(lastm.get(pla), lastm2.get(pla)) >= similarity) {
                            risk++;
                        }
                        if (Similarity.getSimilarity(lastm.get(pla), lastm3.get(pla)) >= similarity) {
                            risk++;
                        }
                        if (Similarity.getSimilarity(lastm.get(pla), lastm4.get(pla)) >= similarity) {
                            risk++;
                        }
                        if (Similarity.getSimilarity(lastm.get(pla), lastm5.get(pla)) >= similarity) {
                            risk++;
                        }
                    } else {
                        String one = lastm.get(pla);
                        String two = lastm2.get(pla);
                        String three = lastm3.get(pla);
                        String four = lastm4.get(pla);
                        String five = lastm5.get(pla);
                        lastm.put(pla, newm);
                        lastm2.put(pla, one);
                        lastm3.put(pla, two);
                        lastm4.put(pla, three);
                        lastm5.put(pla, four);
                        lastm6.put(pla, five);
                        if (Similarity.getSimilarity(lastm.get(pla), lastm2.get(pla)) >= similarity) {
                            risk++;
                        }
                        if (Similarity.getSimilarity(lastm.get(pla), lastm3.get(pla)) >= similarity) {
                            risk++;
                        }
                        if (Similarity.getSimilarity(lastm.get(pla), lastm4.get(pla)) >= similarity) {
                            risk++;
                        }
                        if (Similarity.getSimilarity(lastm.get(pla), lastm5.get(pla)) >= similarity) {
                            risk++;
                        }
                        if (Similarity.getSimilarity(lastm.get(pla), lastm6.get(pla)) >= similarity) {
                            risk++;
                        }
                    }
                }
                if (debug) {
                    String l = (API.getPrefix() + Messages.getString("AC.174") + pla.getName()
                            + Messages.getString("AC.175")
                            + risk);
                    if (alerttoadmins) { // $NON-NLS-1$
                        API.alertMessageChatCo(l);
                    } else {
                        API.println(l);
                    }
                }
            }
            RegisterStats.onChat(pla);
            if (debug) {
                String l = (Messages.getString("AC.177") + pla.getName());
                API.println(l);
            }
            if (risk >= 2) {
                if (vlchat.containsKey(pla)) {
                    vladd = vlchat.get(pla);
                }
                vladd = vladd + 1.5;
                bad = 1;
                vlchat.put(pla, vladd);
            }
            if (containsCaseInsensitive(pla.getName(), chatexempt)) { // $NON-NLS-1$
                cancelled = 1;
            }
            if (cancelled == 1)
                return 0;

            for (String r : blacklistwords) { // $NON-NLS-1$
                if (newm.contains(r.toLowerCase())) {
                    if (debug || logflags) { // $NON-NLS-1$
                        String l = (Messages.getString("AC.181") + r + Messages.getString("AC.182") + pla
                                + Messages.getString("AC.183")
                                + str + Messages.getString("AC.184"));
                        if (alerttoadmins) { // $NON-NLS-1$
                            API.alertMessageChatCo(l);
                        } else {
                            API.println(l);
                        }
                    }
                    if (vlchat.containsKey(pla)) {
                        vladd = vlchat.get(pla);
                    }
                    vladd = vladd + ConfigHelper.getInt(Messages.getString("AC.186"));
                    vlchat.put(pla, vladd);
                    return 1;
                }
            }
            for (String s : redflagwords) { // $NON-NLS-1$
                if (newm.contains(s.toLowerCase())) {
                    if (debug || logflags) { // $NON-NLS-1$
                        String l = (Messages.getString("AC.189") + s + Messages.getString("AC.190") + pla
                                + Messages.getString("AC.191") + str
                                + Messages.getString("AC.192"));
                        if (alerttoadmins) { // $NON-NLS-1$
                            API.alertMessageChatCo(l);
                        } else {
                            API.println(l);
                        }
                    }
                    if (vlchat.containsKey(pla)) {
                        vladd = vlchat.get(pla);
                    }
                    vladd = vladd + 1.5;
                    bad = 1;
                    vlchat.put(pla, vladd);
                }
            }
            int skip = 1;
            for (String s : swhitelist) {
                if (str.toLowerCase().contains(s.toLowerCase())) {
                    skip = 0;
                    break;
                }
            }

            if (skip == 1) {
                if (vlchat.containsKey(pla)) {
                    vladd = vlchat.get(pla);
                }
                vladd++;
                bad = 1;
                vlchat.put(pla, vladd);
                String l = API.getPrefix() + Messages.getString("AC.194") + pla
                        + Messages.getString("AC.195") + str;
                if (alerttoadmins) { // $NON-NLS-1$
                    API.alertMessageChatCo(l);
                } else {
                    API.println(l);
                }

            }
            if (!vlchat.containsKey(pla)) {
                if (debug)
                    API.println(Messages.getString("AC.197") + pla);
                vlchat.put(pla, 0.0);
            }
            if (vlchat.containsKey(pla) && bad == 0) {
                if (debug) {
                    String l = (API.getPrefix() + Messages.getString("AC.204") + pla.getName());
                    if (alerttoadmins) { // $NON-NLS-1$
                        API.alertMessageChatCo(l);
                    } else {
                        API.println(l);
                    }
                }
                vladd = vlchat.get(pla);
                if (vladd > 0)
                    vladd = vladd - 1;
                vlchat.put(pla, vladd);
            }
            if (vlchat.containsKey(pla) && vlchat.get(pla) >= ConfigHelper.getInt(Messages.getString("AC.198"), 8)) {
                if (vlchat.get(pla) >= tippingpoint) { // $NON-NLS-1$
                    if (debug) {
                        String l = (API.getPrefix() + Messages.getString("AC.200") + pla.getName());
                        if (alerttoadmins) { // $NON-NLS-1$
                            API.alertMessageChatCo(l);
                        } else {
                            API.println(l);
                        }
                    }
                    pla.sendMessage(ChatColor.translateAlternateColorCodes('&', spamsg));
                    API.sendPlayerToServer(pla, ConfigHelper.getString(Messages.getString("AC.202")));
                    if (vlchat.get(pla) >= kickpoint) // $NON-NLS-1$
                        API.kickPlayer(pla, ChatColor.translateAlternateColorCodes('&', spamsg));
                }
                return 1;
            }
        }
        return 0;
    }

    public static void onPlayerChat(AsyncPlayerChatEvent event) {
        int st = onChat(event.getMessage(), event.getPlayer());
        if (debug && vlchat.containsKey(event.getPlayer()))
            API.println(API.getPrefix() + event.getPlayer() + "'s risk level: " + vlchat.get(event.getPlayer()));
        if (st >= 1) {
            if (debug) {
                String l = Messages.getString("AC.207") + event.getPlayer();
                API.println(l);
            }
            event.setCancelled(true);
            return;
        }
        if (event.isCancelled())
            return;
        Player player = event.getPlayer();
        Player[] recipients = event.getRecipients().toArray(new Player[0]);
        CCPlayer cp = null;
        for (Player recipient : recipients) {
            try {
                cp = ChatCommandHandle.getCCPlayer(recipient);
            } catch (IOException e) {
                e.printStackTrace();
            }

            if ((cp != null && cp.chatDisabled && ChatCommandHandle.checkForChatDisable)
                    || (cp != null && cp.isIgnored(player.getUniqueId().toString()) && ChatCommandHandle.checkForIgnores))
                event.getRecipients().remove(recipient);
        }
        String msg = ColorManager(event.getMessage());
        msg = ColorCodeManager(msg);
        if (!msg.contentEquals(CANCEL)) {
            Player[] players = event.getRecipients()
                    .toArray(new Player[0]);
            JSONMessage.create(Messages.getString("AC.208") + player.getDisplayName() + ChatColor.RESET
                    + Messages.getString("AC.209") + msg)
                    .suggestCommand(Messages.getString("AC.210") + player.getName()).send(players);
        }
        event.setCancelled(true);
    }

    public static void onPlayerQuit(final PlayerQuitEvent event) {
        ChatCommandHandle.playerlist.removeIf(t -> t.player.equals(event.getPlayer()));
        if (ConfigHelper.getBoolean(Messages.getString("AC.211"))) {
            vlchat.remove(event.getPlayer());
        }
    }

    public static void readConfig(int change) {
        YamlConfiguration c = YamlConfiguration.loadConfiguration(ConfigHelper.d);
        if (change == 3)
            c.set(Messages.getString("AC.212"), Boolean.TRUE);
        if (change == 4)
            c.set(Messages.getString("AC.213"), Boolean.FALSE);
        if (change == 5)
            c.set(Messages.getString("AC.214"), Boolean.TRUE);
        if (change == 6)
            c.set(Messages.getString("AC.215"), Boolean.FALSE);
        if (change == 7)
            c.set(Messages.getString("AC.216"), Boolean.TRUE);
        if (change == 8)
            c.set(Messages.getString("AC.217"), Boolean.FALSE);
        if (change == 9)
            c.set(Messages.getString("AC.218"), Boolean.TRUE);
        if (change == 10)
            c.set(Messages.getString("AC.219"), Boolean.FALSE);
        try {
            c.save(ConfigHelper.d);
        } catch (IOException e) {
            API.alertMessage(Messages.getString("AC.220"));
        }
    }

    public static void reload() {
        chatfilter = ConfigHelper.getBoolean(Messages.getString("AC.142"), true);
        swhitelist = ConfigHelper.getStringList(Messages.getString("AC.222"));
        similarity = ConfigHelper.getDouble(Messages.getString("AC.223"));
        debug = ConfigHelper.getBoolean(Messages.getString("AC.224"), false);
        spamsg = ConfigHelper.getString(Messages.getString("AC.225"));
        a = ConfigHelper.getString(Messages.getString("AC.6"));
        c = ConfigHelper.getString(Messages.getString("AC.8"));
        d = ConfigHelper.getString(Messages.getString("AC.9"));
        f = ConfigHelper.getString(Messages.getString("AC.11"));
        g = ConfigHelper.getString(Messages.getString("AC.12"));
        i = ConfigHelper.getString(Messages.getString("AC.14"));
        j = ConfigHelper.getString(Messages.getString("AC.15"));
        l = ConfigHelper.getString(Messages.getString("AC.17"));
        m = ConfigHelper.getString(Messages.getString("AC.18"));

        n = ConfigHelper.getString(Messages.getString("AC.21"));
        o = ConfigHelper.getString(Messages.getString("AC.24"));
        p = ConfigHelper.getString(Messages.getString("AC.27"));
        q = ConfigHelper.getString(Messages.getString("AC.30"));
        r = ConfigHelper.getString(Messages.getString("AC.33"));
        s = ConfigHelper.getString(Messages.getString("AC.36"));
        t = ConfigHelper.getString(Messages.getString("AC.39"));
        u = ConfigHelper.getString(Messages.getString("AC.42"));
        v = ConfigHelper.getString(Messages.getString("AC.45"));

        w = ConfigHelper.getString(Messages.getString("AC.48"));
        x = ConfigHelper.getString(Messages.getString("AC.51"));
        y = ConfigHelper.getString(Messages.getString("AC.54"));
        z = ConfigHelper.getString(Messages.getString("AC.57"));
        aa = ConfigHelper.getString(Messages.getString("AC.60"));
        ab = ConfigHelper.getString(Messages.getString("AC.63"));
        ac = ConfigHelper.getString(Messages.getString("AC.20"));
        ad = ConfigHelper.getString(Messages.getString("AC.23"));
        ae = ConfigHelper.getString(Messages.getString("AC.26"));

        af = ConfigHelper.getString(Messages.getString("AC.29"));
        ag = ConfigHelper.getString(Messages.getString("AC.32"));
        ah = ConfigHelper.getString(Messages.getString("AC.35"));
        ai = ConfigHelper.getString(Messages.getString("AC.38"));
        aj = ConfigHelper.getString(Messages.getString("AC.41"));
        ak = ConfigHelper.getString(Messages.getString("AC.44"));
        al = ConfigHelper.getString(Messages.getString("AC.47"));
        am = ConfigHelper.getString(Messages.getString("AC.50"));
        an = ConfigHelper.getString(Messages.getString("AC.53"));

        ao = ConfigHelper.getString(Messages.getString("AC.56"));
        ap = ConfigHelper.getString(Messages.getString("AC.59"));
        aq = ConfigHelper.getString(Messages.getString("AC.62"));
        ar = ConfigHelper.getString(Messages.getString("AC.65"));

        as = ConfigHelper.getString(Messages.getString("AC.66"), zz);
        at = ConfigHelper.getString(Messages.getString("AC.70"), zz);
        au = ConfigHelper.getString(Messages.getString("AC.74"), zz);
        av = ConfigHelper.getString(Messages.getString("AC.78"), zz);
        aw = ConfigHelper.getString(Messages.getString("AC.82"), zz);
        ax = ConfigHelper.getString(Messages.getString("AC.86"), zz);
        ay = ConfigHelper.getString(Messages.getString("AC.90"), zz);

        az = ConfigHelper.getString(Messages.getString("AC.94"), zz);
        ba = ConfigHelper.getString(Messages.getString("AC.98"), zz);
        bb = ConfigHelper.getString(Messages.getString("AC.102"), zz);
        bc = ConfigHelper.getString(Messages.getString("AC.106"), zz);
        bd = ConfigHelper.getString(Messages.getString("AC.110"), zz);
        be = ConfigHelper.getString(Messages.getString("AC.114"), zz);
        bf = ConfigHelper.getString(Messages.getString("AC.118"), zz);

        bg = ConfigHelper.getString(Messages.getString("AC.122"), zz);
        bh = ConfigHelper.getString(Messages.getString("AC.126"), zz);
        bi = ConfigHelper.getString(Messages.getString("AC.130"), zz);
        bj = ConfigHelper.getString(Messages.getString("AC.134"), zz);
        bk = ConfigHelper.getString(Messages.getString("AC.138"), zz);

        kickpoint = ConfigHelper.getInt(Messages.getString("AC.203"), 20);
        tippingpoint = ConfigHelper.getInt(Messages.getString("AC.199"), 15);
        useai = ConfigHelper.getBoolean(Messages.getString("AC.172"), true);
        logflags = ConfigHelper.getBoolean(Messages.getString("AC.188"));
        alerttoadmins = ConfigHelper.getBoolean(Messages.getString("AC.193"), false);
        blacklistwords = ConfigHelper.getStringList(Messages.getString("AC.179"));
        redflagwords = ConfigHelper.getStringList(Messages.getString("AC.187"));
        chatexempt = ConfigHelper.getStringList(Messages.getString("AC.178"));
    }
}
